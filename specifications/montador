
3.1 
    Entrada do montador qualquer arquivo *                              - 
    Elementos separados por pelo menos um espaço                        - 
    A linha tem tamanho indefinido, podendo ser mais que 80 caracteres  -
    Comentário de unica linha : --, *- multi linha  -*                  -

    A parte de posicionamento dos [ labels, opcodes e operandos ]       -
    fica mais livre a unica restrição é : ápos um opcode é necessário   -
    o operando ou operandos daquela instrução.                          -
    O software conta com um enxuto editor de texto para inserir código-fonte diretamente ou fazer ajustes no código-fonte de arquivo importado.

3.2
    O primeiro erro é mostrado no console "Assembler errors", e a linha -
    onde tal erro aconteceu.                                            -
    Se não aconteceu nenhum erro é mostrado : Assembling finished       -

    O codigo montado é mostrado a direita do source na tela de arquivo  -
    e também é gerado o arquivo .OBJ                                    -
    Ao encontrar um erro, o montador cessa o seu processamento indicando o erro. Ao processar sem erros um código fonte, o montador exibe no terminal os tokens processados.

3.3

3.3.1
-O Assembly possui sintaxe própria conforme debatido com os colegas.
-A diretiva de máquina INTDEF está representada pela diretiva global.
-A diretiva de máquina INTUSE está representada pela diretiva extern.
-O montador não aceita diretiva START de código, porém é possível utilizar um label que aponta para o exato início do programa. O nome desse label pode ser considerado o nome do programa e declarado como um símbolo global, acessível para outros módulos.
-A sintaxe do código fonte conta com as seguintes características:
    -cabeçalho para inserção de referências acessíveis globalmente (global) e referências externas utilizadas no próprio código-fonte (extern).
    -seção .text que receberá o corpo de instruções que objetivam resolver algum problema com a utilização da máquina hipotética.
    -seção .data que comportará as definições de dados a serem utilizados pelo programa.
-O montador é capaz de detectar o fim do código-fonte, portanto a equipe dispensou a implementação da diretiva END.
-As diretivas de máquina que definem espaços de memória são .space (equivalente à diretiva SPACE) e .word (equivalente à diretiva CONST).
-A instrução WRITE está representada pela instrução PUT.
-No arquivo gerado pelo Montador consta na seção .rodata (read only data) as informações pertinentes ao Ligador. Nessa seção são gravadas informações de símbolos globais, internos e externos, como labels e espaços de memória, bem como os endereços em que foram detectados no código-fonte.
-O Montador insere no cabeçalho do código-objeto informações que registram aquele arquivo como apropriado para ser lido, carregado e executado na máquina hipotética. Sem estas informações, a máquina hipotética não consegue realizar a leitura do arquivo-objeto.
-Eis um exemplo de código-fonte e código-objeto gerados pelo Montador implementado.

> Código-fonte

global main

section .text

    main:
    LOAD a
    PUT a
    zero:
    SUB 1
    BRPOS zero
    STORE a
    PUT a
    COPY c b
    PUT c
    STOP

section .data
    a: .word 5
    b: .word 268
    c: .space

>Código-objeto

7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00

section .text
3 767 20 767 63 1 77 260 
7 767 20 767 13 769 768 20 
769 11 
section .data
5 268 0 
section .rodata

global
	main 256

extern

local_text_labels
	zero 7 

local_data_labels
	a 1 3 9 11 
	b 14 
	c 13 16 

3.3.2
-Apenas identificadores alfanuméricos que iniciam com letra serão lidos pelo Montador. Caso contrário, o Montador apontará erro.

3.3.3
-Números em hexadecimal são reconhecidos no código fonte pois são precedidos de "0x", como o número 0xFF.

3.3.4
-Para utilizar um número literal em uma instrução que suporta tal, é possível utilizar número puro, como na instrução LOAD 69 (carrega 69 em decimal para o Acumulador).
-Conforme o suporte da instrução, o endereçamento dos operandos pode ser indicado pelos prefixos "&" para endereçamento direto e "#" para endereçamento indireto.
-Apenas um símbolo, acompanhado ou não por prefixo indicador de endereçamento, é suportado como operando por este Montador.

3.4
-Caso ocorra, o Montador é capaz de indicar uma série de erros para prevenir a inserção de dados estranhos na máquina.
-O Montador apontará erros como: operando não definido, operando redefinido, instrução com operandos inválidos, valores fora do limite, erro de sintaxe.

3.5
-Existe uma GUI disponível ao usuário que executa o software. Esse interface gráfica fornece as ferramentas para lidar com a máquina, o que inclui o Montador.
-O usuário pode navegar em 3 janelas: Montador, Terminal e Máquina.
-Na janela Montador, o usuário conta com a ferramenta de importação do código-fonte. Ao selecionar um arquivo, o software exibe todo o código daquele arquivo na caixa de texto da esquerda. É possível fazer alterações no código e, uma vez satisfeito com o resultado, o usuário pode clicar em Assemble para realizar a montagem.
-Na caixa de texto à direita, o usuário poderá ver o resultado da montagem. O código-objeto é exibido para conferência.
-Para carregar o programa resultante na memória da máquina hipotética, o usuário clica em File > Load > program.elf98
-O usuário poderá clicar na janela Máquina para executar o programa montado e carregado e checar os valores atualizados de memória e registradores.